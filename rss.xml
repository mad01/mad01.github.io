<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"
  xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
  <channel>
    <title>qone.io</title>
    <link>qone.io</link>
    <description>my tech blog</description>
    <pubDate>Sat, 11 Apr 2015 00:00:00 +0200</pubDate>
    <item>
      <title>html email with aws ses and boto</title>
      <link>qone.io/amazon/aws/ses/python/boto/2015/04/11/aws-ses-python-boto.html</link>
      <description>&lt;p&gt;Sending html email with amazon ses &lt;code&gt;simple email service&lt;/code&gt; using the python module &lt;a href=&quot;https://github.com/boto/boto&quot;&gt;boto&lt;/a&gt;. &lt;/p&gt;
</description>
      <pubDate>Sat, 11 Apr 2015 00:00:00 +0200</pubDate>
      <dc:date>2015-04-11T00:00:00+02:00</dc:date>
    </item>
    <item>
      <title>bulding a debian docker base build for a flask app</title>
      <link>qone.io/docker/debian/2015/04/03/docker_basic_build.html</link>
      <description>&lt;p&gt;Start by pulling down a debian base build. &lt;code&gt;docker pull debian:8.0&lt;/code&gt; .Creating a &lt;code&gt;Dockerfile&lt;/code&gt; for a base build to a python flask app. based on debian 8&lt;/p&gt;
</description>
      <pubDate>Fri, 03 Apr 2015 00:00:00 +0200</pubDate>
      <dc:date>2015-04-03T00:00:00+02:00</dc:date>
    </item>
    <item>
      <title>python flask rest api auth option storing in mongoDB 3.0 running on docker</title>
      <link>qone.io/python/rest/docker/mongodb/2015/03/28/python-flask-mongoDB-restApi-auth.html</link>
      <description>&lt;p&gt;I have been looking on a way to auth rest api endpoints that needs to have auth. I will be using Python with flask, flask-restful, yaml, pymongo and passlib. passlib will be used to salt the password that will be stored in mondoDB. A note here is that i will be using mongoDB 3.0 which means that you have to install the un released pymongo 3.0. here is the packets and links you need. &lt;/p&gt;
</description>
      <pubDate>Sat, 28 Mar 2015 00:00:00 +0100</pubDate>
      <dc:date>2015-03-28T00:00:00+01:00</dc:date>
    </item>
    <item>
      <title>productivity with Pomodoro and micro checklist</title>
      <link>qone.io/productivity/2015/03/25/productivity.html</link>
      <description>&lt;p&gt;I have recently started to use a productivity theory called &lt;code&gt;Pomodoro&lt;/code&gt;. The principe with Pomodoro is that you work focused on something for 25 min, having a micro break for 5 min and then continue. After 4 sessions you have a longer break for 15 min. I have been using this in combination with a &lt;code&gt;micro checklist&lt;/code&gt;. What i mean with &lt;code&gt;micro checklist&lt;/code&gt; is to have a check list like this. &lt;/p&gt;
</description>
      <pubDate>Wed, 25 Mar 2015 00:00:00 +0100</pubDate>
      <dc:date>2015-03-25T00:00:00+01:00</dc:date>
    </item>
    <item>
      <title>pitfalls when writing commandline tools</title>
      <link>qone.io/command/line/tools/2015/03/21/command-line-tools-pitfalls.html</link>
      <description>&lt;p&gt;Common pitfalls when using template files/support files in the working dir of the script, is easy to miss when you are writing command line tools. In this case using &lt;code&gt;python&lt;/code&gt;. Some of the more annoying mistakes is when you have template files stores and referred to in a script, you assume that the person that will use you script stands in the folder were the script is. lest assume that we are using a file template.html in a folder named foobar. of corse this will not work if you are running the script from somewhere else. I normally stand in the same folder as the script when i am developing a tool. When you then stand in some other folder everything will fail since you are not giving the absolute path to the template files. &lt;/p&gt;
</description>
      <pubDate>Sat, 21 Mar 2015 00:00:00 +0100</pubDate>
      <dc:date>2015-03-21T00:00:00+01:00</dc:date>
    </item>
    <item>
      <title>dynamic test generation</title>
      <link>qone.io/testing/python/2015/03/15/test-generation.html</link>
      <description>&lt;p&gt;I what to show a api template i did to generate api post tests with a random varible lenght hex value as the payload in a http post request. In this case i am using python, in compination with &lt;a href=&quot;https://nose.readthedocs.org&quot;&gt;nose&lt;/a&gt;, to run my tests. Note you can run this without nose but you will get all prints from the support libs. Nose will supress the prints if the test passes. To change to varible number of tests that you can generate you just change the &lt;code&gt;random_data&lt;/code&gt; input integer. The purpose of this is to be able to check that a REST api can take the random input length of the hex payload. in the testmap you gets a dict that contains a random, int, float, hex, password. &lt;/p&gt;
</description>
      <pubDate>Sun, 15 Mar 2015 00:00:00 +0100</pubDate>
      <dc:date>2015-03-15T00:00:00+01:00</dc:date>
    </item>
    <item>
      <title>stay up to date with tech</title>
      <link>qone.io/tech/news/2015/03/09/stay-up-tp-date-with-tech.html</link>
      <description>&lt;p&gt;Keeping up with tech. I like read and be aware of what is going on in tech, security, apple, linux, development, testing, and some devops related topics. I have attached a &lt;code&gt;OPML&lt;/code&gt; file from my &lt;a href=&quot;https://feedly.com&quot;&gt;feedly&lt;/a&gt; where i get most of my news if your interested. I am frequently listening to a few podcasts, I&amp;#39;m using a awesome podcast iPhone` app &lt;a href=&quot;https://overcast.fm/&quot;&gt;overcast&lt;/a&gt; to litsen. The smart speed saves some time, voice boost helps to boost the voice those is the features i think it best for me. &lt;/p&gt;
</description>
      <pubDate>Mon, 09 Mar 2015 00:00:00 +0100</pubDate>
      <dc:date>2015-03-09T00:00:00+01:00</dc:date>
    </item>
    <item>
      <title>cold brew coffee</title>
      <link>qone.io/coffee/coldbrew/2015/03/08/cold-brew-coffee.html</link>
      <description>&lt;p&gt;Brew some easy and good cold brew coffee. This can be used for just plain ice coffee, ice latte, and many more. A note it that it will be high in caffeine. What you need is. &lt;/p&gt;
</description>
      <pubDate>Sun, 08 Mar 2015 00:00:00 +0100</pubDate>
      <dc:date>2015-03-08T00:00:00+01:00</dc:date>
    </item>
    <item>
      <title>control temptation @ work</title>
      <link>qone.io/temptation/2015/03/04/control-temptation-at-work.html</link>
      <description>&lt;p&gt;So what do i mean with &lt;code&gt;control temptation @ work&lt;/code&gt;. When working with development you have to get it to a problem and try to solve it. Doing that requires that you can stay focused on the task in hand to get the most out of it. Lets say you take 10 - 15 min to get it to the right flow. During your day you have email, facebook, online newspapers, chat systems like &lt;code&gt;IRC&lt;/code&gt;, &lt;code&gt;HipChat&lt;/code&gt;, &lt;code&gt;Skype&lt;/code&gt;, colleagues and many others things that can make you get out of your productive flow. The result of this will mean for every time you lose the 10 - 15 min to get in to the productive flow, over and over. And you may end up at the end of that day and realizing that you did not get done with what you wanted. That is not fun for anyone. &lt;/p&gt;
</description>
      <pubDate>Wed, 04 Mar 2015 00:00:00 +0100</pubDate>
      <dc:date>2015-03-04T00:00:00+01:00</dc:date>
    </item>
    <dc:date>2015-04-11T00:00:00+02:00</dc:date>
  </channel>
</rss>